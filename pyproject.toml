[project]
name = "wordcon"
version = "0.1.0"
description = "API for wordcon"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "advanced-alchemy>=1.4.5",
    "aiosqlite>=0.21.0",
    "asyncpg>=0.30.0",
    "granian>=2.5.0",
    "litestar-granian>=0.14.2",
    "litestar-offline-docs>=1.1.0",
    "litestar[jwt,standard]>=2.16.0",
    "microbootstrap>=0.23.0",
    "passlib[argon2]>=1.7.4",
    "prometheus-client>=0.22.1",
    "sqlalchemy>=2.0.41",
    "structlog>=25.4.0",
]

[tool.ruff.format]
quote-style = "single"

[tool.ruff]
line-length = 120
lint.extend-select = ["Q"]

lint.select = [
    "E", # pycodestyle errors (settings from FastAPI, thanks, @tiangolo!)
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "C", # flake8-comprehensions
    "B", # flake8-bugbear
]
lint.ignore = [
    "E501", # line too long, handled by black
    "C901", # too complex
]

src = ["app"]
exclude = [".venv", ".git", "__pycache__", "build", "dist", "venv"]

target-version = "py313"

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.ruff.lint.isort]
order-by-type = true
relative-imports-order = "closest-to-furthest"
extra-standard-library = ["typing"]
section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder",
]
known-first-party = []

[tool.pytest.ini_options]
addopts = "-vvv"
testpaths = "tests"

[tool.mypy]
files = ["app"]
disable_error_code = "import-untyped"
strict_optional = false

[tool.semantic_release]
version_toml = [
    "pyproject.toml:project.version"
]
commit_message = "chore(release): {version} [skip ci]"
branch = "main"
upload_to_pypi = false
upload_to_release = true

[dependency-groups]
dev = [
    "docformatter>=1.7.7",
    "mypy>=1.17.1",
    "pre-commit>=4.3.0",
    "ruff>=0.12.8",
    "types-sqlalchemy-utils>=1.1.0",
]
