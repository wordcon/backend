LITESTAR_APP=app.app:app
SERVICE_NAME=wordcon
SERVICE_DESCRIPTION=Wordcon backend service
SERVICE_VERSION=0.0.1
SERVICE_STATIC_PATH=/static
SERVICE_DEBUG=true
SERVICE_ENVIRONMENT=development

LITESTAR_HOST=0.0.0.0
LITESTAR_PORT=8000
APP_URL=http://localhost:8000

# Logging (structlog)
LOGGING_LOG_LEVEL=20
LOGGING_FLUSH_LEVEL=40
LOGGING_BUFFER_CAPACITY=100
# LOGGING_UNSET_HANDLERS=["uvicorn","uvicorn.access"]
LOGGING_EXCLUDE_ENDPOINTS=["/health/","/metrics"]
LOGGING_TURN_OFF_MIDDLEWARE=false

# Auth
JWT_SECRET=dev-change-me

# Database
DATABASE_URL=postgresql+asyncpg://app:app@db:5432/app
DATABASE_ECHO=false
DATABASE_ECHO_POOL=false
DATABASE_POOL_DISABLE=false
DATABASE_POOL_MAX_OVERFLOW=5
DATABASE_POOL_SIZE=5
DATABASE_POOL_TIMEOUT=30

# Swagger
SWAGGER_PATH=/docs
SWAGGER_OFFLINE_DOCS=false
SWAGGER_EXTRA_PARAMS={"servers":[{"url":"http://localhost:8000"}]}

# Health checks
HEALTH_CHECKS_ENABLED=true
HEALTH_CHECKS_PATH=/health/
HEALTH_CHECKS_INCLUDE_IN_SCHEMA=false

# Prometheus (Litestar)
PROMETHEUS_METRICS_PATH=/metrics
# PROMETHEUS_ADDITIONAL_PARAMS={"exclude":["/health/"]}

CORS_ALLOWED_ORIGINS=["http://localhost:3000"]
CORS_ALLOWED_METHODS=["GET","POST","PUT","PATCH","DELETE","OPTIONS"]
CORS_ALLOWED_HEADERS=["Authorization","Content-Type"]
CORS_EXPOSED_HEADERS=[]
CORS_ALLOWED_CREDENTIALS=false
CORS_ALLOWED_ORIGIN_REGEX=
CORS_MAX_AGE=600

SENTRY_DSN=
SENTRY_TRACES_SAMPLE_RATE=0.2
SENTRY_SAMPLE_RATE=1.0
SENTRY_MAX_BREADCRUMBS=15
SENTRY_MAX_VALUE_LENGTH=16384
SENTRY_ATTACH_STACKTRACE=true
# SENTRY_TAGS={"service_tier":"backend"}

# OpenTelemetry (OTLP) — ПРОСТОЙ ВАРИАНТ: gRPC на Jaeger (4317)
OPENTELEMETRY_NAMESPACE=wordcon-dev
OPENTELEMETRY_CONTAINER_NAME=backend
OPENTELEMETRY_EXCLUDE_URLS=["/health/","/metrics","/docs"]

OPENTELEMETRY_ENDPOINT=jaeger:4317
OPENTELEMETRY_INSECURE=true
OTEL_EXPORTER_OTLP_PROTOCOL=grpc
# При желании можно явно указать по типам:
# OTEL_EXPORTER_OTLP_TRACES_PROTOCOL=grpc
# OTEL_EXPORTER_OTLP_METRICS_PROTOCOL=grpc
# OTEL_EXPORTER_OTLP_LOGS_PROTOCOL=grpc

# Альтернатива (HTTP) — раскомментируйте вместо gRPC, если нужен HTTP:
# OPENTELEMETRY_ENDPOINT=http://jaeger:4318
# OTEL_EXPORTER_OTLP_PROTOCOL=http/protobuf
# OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://jaeger:4318/v1/traces
# OTEL_EXPORTER_OTLP_METRICS_ENDPOINT=http://jaeger:4318/v1/metrics
# OTEL_EXPORTER_OTLP_LOGS_ENDPOINT=http://jaeger:4318/v1/logs

# Для SaaS можно добавить заголовки:
# OTEL_EXPORTER_OTLP_HEADERS=Authorization=Bearer <token>

# Pyroscope (профилирование)
PYROSCOPE_ENDPOINT=http://pyroscope:4040
# PYROSCOPE_AUTH_TOKEN=  # для SaaS
PYROSCOPE_SAMPLE_RATE=100
# PYROSCOPE_TAGS={"env":"dev"}